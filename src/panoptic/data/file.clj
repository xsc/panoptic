(ns ^{:doc "File Representation"
      :author "Yannick Scherer"}
  panoptic.data.file
  (:require [me.raynes.fs :as fs]
            [panoptic.utils :as u]))

;; ## File Map
;;
;; A file is represented as a map with only one mandatory field, namely `:path` containing
;; a fully-qualified path to a file. Additional data, used by Panoptic, includes:
;;
;; - `:checked`: unix timestamp of time the file was last checked for changes
;; - `:modified`/`:created`/`:deleted`/`:missing`: flags indicating the checking result
;; - `:checksum`: checksum value generated by a Panoptic checker (this might
;;    be anything comparable using `=`).

(defn file
  "Create new File Map using the given Path."
  [path]
  (-> {}
    (assoc :path (fs/absolute-path path))))

;; ## Panoptic Data

(defn set-file-deleted
  "Set `:deleted` data in File Map, update timestamp and checksum."
  [f]
  (-> f
    (dissoc :created :modified :missing )
    (assoc :deleted true) 
    (dissoc :checksum)
    (u/update-timestamp :checked)))

(defn set-file-created
  "Set `:created` data in File Map, update timestamp and checksum."
  [f checksum]
  (-> f
    (dissoc :deleted :modified :missing )
    (assoc :created true)
    (assoc :checksum checksum)
    (u/update-timestamp :checked)))

(defn set-file-modified
  "Set `:modified` data in File Map, update timestamp and checksum."
  [f checksum]
  (-> f
    (dissoc :created :deleted :missing)
    (assoc :modified true)
    (assoc :checksum checksum)
    (u/update-timestamp :checked)))

(defn set-file-missing
  [f]
  (-> f
    (dissoc :created :deleted :modified)
    (assoc :missing true)
    (u/update-timestamp :checked)))

(defn set-file-untouched
  "Clear all `:deleted`, `:modified` and `:created` data in File Map, update timestamp."
  [f checksum]
  (-> f
    (dissoc :created :deleted :modified :missing)
    (assoc :checksum checksum)
    (u/update-timestamp :checked)))
